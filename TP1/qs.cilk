#include <stdio.h>
#include <stdlib.h> 

#define N 10000000

void swap(int *v, int i, int j) 
{
  int tmp=v[i];
  v[i]=v[j];
  v[j]=tmp;
}

int colocar(int *v, int b, int t)
{
  int i;
  int pivote, valor_pivote;
  int temp;
 
  pivote = b;
  valor_pivote = v[pivote];
  for (i=b+1; i<=t; i++){
    if (v[i] < valor_pivote){
      pivote++;    
      swap(v,i,pivote);
    }
  }
  temp=v[b];
  v[b]=v[pivote];
  v[pivote]=temp;
  return pivote;
} 

 
void qsort_(int *v,int b, int t)
{
  int pivote;
  if (b < t) {
    pivote = colocar(v,b,t);
    qsort_(v,b,pivote-1);
    qsort_(v,pivote+1,t);
 }
}

cilk void QuicksortSeq(int* v, int b, int t)
{
  int pivote;
  if((t - b)  <= 10 && b < t) /* Arreglos de tamaÃ±o menor o igual a 10 */
    qsort_(v, b, t);
  if(b < t && (t-b) > 10){
    pivote=colocar(v, b, t);
    spawn QuicksortSeq(v, b, pivote-1);
    spawn QuicksortSeq(v, pivote+1, t);
  }  
}

cilk int main(int argc, char **argv) 
{
  int a[N],i;

  for(i=0;i<N;i++) 
    a[i]=random()%N;

	spawn QuicksortSeq(a,0,N-1);
	for(i=0;i<N;i++) {
		printf("%d ",a[i]);
	}
	printf("\n");
	return 0;
}
